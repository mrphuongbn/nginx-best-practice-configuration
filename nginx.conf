# run nginx in foreground
daemon off;
pid /var/run/nginx.pid;
user npm;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes  auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;
error_log  /var/log/nginx/error.log warn;



events {
	worker_connections 20000;
	use epoll;
	multi_accept on;
}

worker_rlimit_nofile    130000; 

http {
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
						'$status $body_bytes_sent "$http_referer" '
						'"$http_user_agent" "$http_x_forwarded_for"';

	access_log  on;

	sendfile        on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	keepalive_requests 100000;
	types_hash_max_size 2048;
	server_tokens off;       


	open_file_cache          max=10000 inactive=10m;
	open_file_cache_valid    20m;
	open_file_cache_min_uses 1;
	open_file_cache_errors   on;

	client_max_body_size 50M;
	client_body_buffer_size 50k;
	server_names_hash_bucket_size 128;
	include mime.types;
	default_type application/octet-stream;
	# Compression
# Enable Gzip compressed.
	gzip on;
	gzip_static  on;
# Enable compression both for HTTP/1.0 and HTTP/1.1.
	gzip_http_version  1.1;

# Compression level (1-9).
# 5 is a perfect compromise between size and cpu usage, offering about
# 75% reduction for most ascii files (almost identical to level 9).
	gzip_comp_level    5;

# Don't compress anything that's already small and unlikely to shrink much
# if at all (the default is 20 bytes, which is bad as that usually leads to
# larger files after gzipping).
	gzip_min_length    256;

# Compress data even for clients that are connecting to us via proxies,
# identified by the "Via" header (required for CloudFront).
	gzip_proxied       any;

# Tell proxies to cache both the gzipped and regular version of a resource
# whenever the client's Accept-Encoding capabilities header varies;
# Avoids the issue where a non-gzip capable client (which is extremely rare
# today) would display gibberish if their proxy gave them the gzipped version.
	gzip_vary          on;

# Compress all output labeled with one of the following MIME-types.
  # text/html is always compressed by HttpGzipModule
	gzip_types
	application/atom+xml
	application/javascript
	application/json
	application/rss+xml
	application/vnd.ms-fontobject
	application/x-font-ttf
	application/x-web-app-manifest+json
	application/xhtml+xml
	application/xml
	font/opentype
	image/svg+xml
	image/x-icon
	text/css
	text/plain
	text/x-component;
  
# Includes files with directives to load dynamic modules.
	include /etc/nginx/conf.d/*.conf;
}
